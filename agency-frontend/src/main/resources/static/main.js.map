{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/flight-booking/flight-booking.component.css","webpack:///./src/app/flight-booking/flight-booking.component.html","webpack:///./src/app/flight-booking/flight-booking.component.ts","webpack:///./src/app/flight-search/flight-search.component.css","webpack:///./src/app/flight-search/flight-search.component.html","webpack:///./src/app/flight-search/flight-search.component.ts","webpack:///./src/app/models/address.ts","webpack:///./src/app/models/passenger.ts","webpack:///./src/app/models/reservationRequest.ts","webpack:///./src/app/models/searchCriteria.ts","webpack:///./src/app/page-notfound/page-notfound.component.ts","webpack:///./src/app/services/flights.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {FlightSearchComponent} from \"./flight-search/flight-search.component\";\nimport {FlightBookingComponent} from \"./flight-booking/flight-booking.component\";\nimport {PageNotfoundComponent} from \"./page-notfound/page-notfound.component\";\n\nconst routes: Routes = [\n  {path: '', redirectTo: '/flight-search', pathMatch: 'full'},\n  {path: 'flight-search', component: FlightSearchComponent},\n  {path: 'flight-booking', component: FlightBookingComponent},\n  {path: '**', component: PageNotfoundComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\nexport const RoutingComponents = [FlightSearchComponent, FlightBookingComponent, PageNotfoundComponent]\n","module.exports = \"\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<div style=\\\"text-align:center\\\">\\n  <h1>\\n    {{ title }}\\n  </h1>\\n</div>\\n\\n<!--\\n<nav class=\\\"navbar navbar-default\\\">\\n  <ul class=\\\"nav navbar-nav\\\">\\n    <a routerLink=\\\"flight-search\\\" routerLinkActive=\\\"active\\\"> Flight Search </a>\\n    <a routerLink=\\\"flight-booking\\\" routerLinkActive=\\\"active\\\"> Flight Booking </a>\\n  </ul>\\n</nav>\\n-->\\n<div class=\\\"container\\\">\\n  <router-outlet></router-outlet>\\n</div>\\n\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Online Flight Booking Services';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule }   from '@angular/forms';\nimport { HttpClientModule } from \"@angular/common/http\";\n\nimport { AppRoutingModule, RoutingComponents } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport {\n  MatBadgeModule,\n  MatFormFieldModule,\n  MatDatepickerModule,\n  MatNativeDateModule,\n  MatSelectModule,\n  MatPaginatorModule,\n  MatCardModule,\n  MatDividerModule,\n  MatInputModule,\n  MatTableModule} from \"@angular/material\";\n\nimport { FlightsService } from \"./services/flights.service\";\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    RoutingComponents\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule,\n    BrowserAnimationsModule,\n    MatBadgeModule,\n    MatFormFieldModule,\n    MatDatepickerModule,\n    MatSelectModule,\n    MatPaginatorModule,\n    MatTableModule,\n    MatCardModule,\n    MatDividerModule,\n    MatNativeDateModule,\n    MatInputModule\n  ],\n  providers: [\n    FlightsService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \"<p>\\n  flight-booking works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-flight-booking',\n  templateUrl: './flight-booking.component.html',\n  styleUrls: ['./flight-booking.component.css']\n})\nexport class FlightBookingComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".example-container {\\n  display: flex;\\n  flex-direction: column;\\n}\\n\\n.example-container > * {\\n  width: 100%;\\n}\\n\\ntable {\\n  width: 100%;\\n}\\n\\n.example-form {\\n  min-width: 150px;\\n  max-width: 500px;\\n  width: 100%;\\n}\\n\\n.example-full-width {\\n  width: 50%;\\n}\\n\"","module.exports = \"<div class=\\\"container\\\">\\n\\n  <!-- Search Flights -->\\n\\n  <div [hidden]=\\\"hide_search_form\\\" class=\\\"modal-body row\\\">\\n    <div class=\\\"col-md-6\\\">\\n      <div class=\\\"col align-items-center justify-content-center\\\"><h3>Flight Search Form</h3></div>\\n      <div class=\\\"col align-items-center justify-content-center\\\">\\n        <form (ngSubmit)=\\\"searchFlights()\\\" #flightSearchForm=\\\"ngForm\\\" class=\\\"example-form\\\">\\n\\n          <mat-form-field>\\n            <mat-label for=\\\"origin\\\"> From </mat-label>\\n            <mat-select palceholder=\\\"From\\\" id=\\\"origin\\\" name=\\\"origin\\\" [(ngModel)]=\\\"searchCriteria.origin\\\">\\n              <mat-option *ngFor=\\\"let orig of origins\\\" [value]=\\\"orig\\\"> {{orig}} </mat-option>\\n            </mat-select>\\n          </mat-form-field>\\n\\n          <br/>\\n\\n          <mat-form-field>\\n            <mat-label for=\\\"destination\\\"> To </mat-label>\\n            <mat-select palceholder=\\\"To\\\" id=\\\"destination\\\" name=\\\"destination\\\" [(ngModel)]=\\\"searchCriteria.destination\\\">\\n              <mat-option *ngFor=\\\"let dest of destinations\\\" [value]=\\\"dest\\\"> {{dest}} </mat-option>\\n            </mat-select>\\n          </mat-form-field>\\n\\n          <br/>\\n\\n          <mat-form-field>\\n            <mat-label for=\\\"departPicker\\\"> Departure Date </mat-label>\\n            <input matInput [matDatepicker]=\\\"departPicker\\\" placeholder=\\\"Departure date\\\" name=\\\"departure\\\" [(ngModel)]=\\\"searchCriteria.outDate\\\">\\n            <mat-datepicker-toggle matSuffix [for]=\\\"departPicker\\\"></mat-datepicker-toggle>\\n            <mat-datepicker #departPicker></mat-datepicker>\\n          </mat-form-field>\\n\\n          <br/>\\n\\n          <mat-form-field>\\n            <mat-label for=\\\"returnPicker\\\"> Return Date </mat-label>\\n            <input matInput [matDatepicker]=\\\"returnPicker\\\" placeholder=\\\"Return date\\\" name=\\\"arrival\\\" [(ngModel)]=\\\"searchCriteria.inDate\\\">\\n            <mat-datepicker-toggle matSuffix [for]=\\\"returnPicker\\\"></mat-datepicker-toggle>\\n            <mat-datepicker #returnPicker></mat-datepicker>\\n          </mat-form-field>\\n\\n          <br/>\\n\\n          <button mat-button type=\\\"submit\\\" [disabled]=\\\"!flightSearchForm.form.valid\\\"> Search </button> &nbsp;&nbsp;\\n          <button mat-button type=\\\"button\\\" (click)=\\\"flightSearchForm.reset()\\\"> Reset </button>\\n        </form>\\n      </div>\\n    </div>\\n    <div class=\\\"col-md-6\\\">\\n      <div class=\\\"col align-items-center justify-content-center\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"span4\\\">\\n            <img style=\\\"float:left\\\" src=\\\"assets/images/plane-2.jpg\\\" class=\\\"img-fluid\\\"/>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n\\n  <!-- Search Result -->\\n  <div [hidden]=\\\"hide_select_outbound\\\" class=\\\"modal-body row\\\">\\n    <div class=\\\"col-md-6\\\">\\n      <div class=\\\"row align-items-center justify-content-center\\\"><h3>Select outbound flight</h3></div>\\n      <a routerLink=\\\"search-flight\\\" class=\\\"btn btn-primary\\\">Home</a>\\n      <div *ngFor=\\\"let f of outboundFlightsResult\\\" class=\\\"row card align-items-center\\\">\\n        <div class=\\\"card-body\\\">\\n          <h5 class=\\\"card-title\\\">{{f.airline}}</h5>\\n          <h6 class=\\\"card-subtitle mb-2 text-muted\\\">Flight: {{f.nbr}}</h6>\\n\\n            <table class=\\\"table\\\">\\n              <thead>\\n              <tr>\\n                <th scope=\\\"col\\\">From</th>\\n                <th scope=\\\"col\\\">To</th>\\n                <th scope=\\\"col\\\">Depart</th>\\n                <th scope=\\\"col\\\">Arrival</th>\\n                <th scope=\\\"col\\\">Price</th>\\n                <th scope=\\\"col\\\"></th>\\n              </tr>\\n              </thead>\\n              <tbody>\\n              <tr>\\n                <td>{{f.origin}}</td>\\n                <td>{{f.destination}}</td>\\n                <td>{{f.departure | date: 'MM/dd/yyyy'}}</td>\\n                <td>{{f.arrival | date: 'MM/dd/yyyy'}}</td>\\n                <td>{{f.price}}</td>\\n                <td><a (click)=\\\"selectOutboundFligt(f)\\\" class=\\\"card-link\\\"><b>Select</b></a></td>\\n              </tr>\\n            </table>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"col-md-6\\\">\\n      <div class=\\\"col align-items-center justify-content-center\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"span4\\\">\\n            <img style=\\\"float:left\\\" src=\\\"assets/images/plane-2.jpg\\\" class=\\\"img-fluid\\\"/>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n\\n  <!-- returning flight -->\\n  <div [hidden]=\\\"hide_select_inbound\\\" class=\\\"modal-body row\\\">\\n    <div class=\\\"col-md-6\\\">\\n      <div class=\\\"row align-items-center justify-content-center\\\"><h3>Select returning flight</h3></div>\\n      <a routerLink=\\\"flight-search\\\" class=\\\"btn btn-primary\\\">Home</a>\\n      <div *ngFor=\\\"let f of inboundFlightsResult\\\" class=\\\"row card align-items-center\\\">\\n        <div class=\\\"card-body\\\">\\n          <h5 class=\\\"card-title\\\">{{f.airline}}</h5>\\n          <h6 class=\\\"card-subtitle mb-2 text-muted\\\">Flight: {{f.nbr}}</h6>\\n\\n          <table class=\\\"table\\\">\\n            <thead>\\n            <tr>\\n              <th scope=\\\"col\\\">From</th>\\n              <th scope=\\\"col\\\">To</th>\\n              <th scope=\\\"col\\\">Depart</th>\\n              <th scope=\\\"col\\\">Arrival</th>\\n              <th scope=\\\"col\\\">Price</th>\\n              <th scope=\\\"col\\\"></th>\\n            </tr>\\n            </thead>\\n            <tbody>\\n            <tr>\\n              <td>{{f.origin}}</td>\\n              <td>{{f.destination}}</td>\\n              <td>{{f.departure | date: 'MM/dd/yyyy'}}</td>\\n              <td>{{f.arrival | date: 'MM/dd/yyyy'}}</td>\\n              <td>{{f.price}}</td>\\n              <td><a (click)=\\\"selectInboundFligt(f)\\\" class=\\\"card-link\\\"><b>Select</b></a></td>\\n            </tr>\\n          </table>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"col-md-6\\\">\\n      <div class=\\\"col align-items-center justify-content-center\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"span4\\\">\\n            <img style=\\\"float:left\\\" src=\\\"assets/images/plane-2.jpg\\\" class=\\\"img-fluid\\\"/>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n\\n  <!-- passenger information -->\\n  <div [hidden]=\\\"hide_info_passenger\\\" class=\\\"modal-body row\\\">\\n    <div class=\\\"col-md-6\\\">\\n      <div class=\\\"row align-items-center justify-content-center\\\"><h3>Enter your information</h3></div>\\n      <a routerLink=\\\"flight-search\\\" class=\\\"btn btn-primary\\\">Home</a>\\n      <form (ngSubmit)=\\\"passengerInfo()\\\" #passengerForm=\\\"ngForm\\\" class=\\\"example-form\\\">\\n        <mat-form-field class=\\\"example-full-width\\\">\\n          <input matInput placeholder=\\\"First Name\\\" value=\\\"First Name\\\" name=\\\"first_name\\\" [(ngModel)]=\\\"passenger.firstName\\\">\\n        </mat-form-field>\\n\\n        <br/>\\n\\n        <mat-form-field class=\\\"example-full-width\\\">\\n          <textarea matInput placeholder=\\\"Last Name\\\" name=\\\"last_name\\\" [(ngModel)]=\\\"passenger.lastName\\\"></textarea>\\n        </mat-form-field>\\n\\n        <br/>\\n\\n        <mat-form-field class=\\\"example-full-width\\\">\\n          <textarea matInput placeholder=\\\"Age\\\" name=\\\"age\\\" [(ngModel)]=\\\"passenger.age\\\"></textarea>\\n        </mat-form-field>\\n\\n        <br/>\\n        <button mat-button type=\\\"submit\\\" [disabled]=\\\"!passengerForm.form.valid\\\"> Next </button> &nbsp;&nbsp;\\n        <button mat-button type=\\\"button\\\" (click)=\\\"passengerForm.reset()\\\"> Reset </button>\\n      </form>\\n    </div>\\n    <div class=\\\"col-md-6\\\">\\n      <div class=\\\"col align-items-center justify-content-center\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"span4\\\">\\n            <img style=\\\"float:left\\\" src=\\\"assets/images/plane-2.jpg\\\" class=\\\"img-fluid\\\"/>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n\\n  <!-- address information -->\\n  <div [hidden]=\\\"hide_info_address\\\" class=\\\"modal-body row\\\">\\n    <div class=\\\"col-md-6\\\">\\n      <div class=\\\"row align-items-center justify-content-center\\\"><h3>Enter your address</h3></div>\\n      <a routerLink=\\\"flight-search\\\" class=\\\"btn btn-primary\\\">Home</a>\\n      <form (ngSubmit)=\\\"book()\\\" #addressForm=\\\"ngForm\\\" class=\\\"example-form\\\">\\n        <mat-form-field class=\\\"example-full-width\\\">\\n          <input matInput placeholder=\\\"address 1\\\" value=\\\"address 1\\\" name=\\\"address_1\\\" [(ngModel)]=\\\"address.address1\\\">\\n        </mat-form-field>\\n\\n        <br/>\\n\\n        <mat-form-field class=\\\"example-full-width\\\">\\n          <input matInput placeholder=\\\"address 2\\\" value=\\\"address 2\\\" name=\\\"address_2\\\" [(ngModel)]=\\\"address.address2\\\">\\n        </mat-form-field>\\n\\n        <br/>\\n\\n        <mat-form-field class=\\\"example-full-width\\\">\\n          <input matInput placeholder=\\\"city\\\" value=\\\"city\\\" name=\\\"city\\\" [(ngModel)]=\\\"address.city\\\">\\n        </mat-form-field>\\n\\n        <br/>\\n\\n        <mat-form-field class=\\\"example-full-width\\\">\\n          <input matInput placeholder=\\\"state\\\" value=\\\"state\\\" name=\\\"state\\\" [(ngModel)]=\\\"address.state\\\">\\n        </mat-form-field>\\n\\n        <br/>\\n\\n        <mat-form-field class=\\\"example-full-width\\\">\\n          <input matInput placeholder=\\\"zip\\\" value=\\\"zip\\\" name=\\\"zip\\\" [(ngModel)]=\\\"address.zip\\\">\\n        </mat-form-field>\\n\\n        <br/>\\n        <button mat-button type=\\\"submit\\\" [disabled]=\\\"!addressForm.form.valid\\\"> Book </button> &nbsp;&nbsp;\\n        <button mat-button type=\\\"button\\\" (click)=\\\"addressForm.reset()\\\"> Reset </button>\\n      </form>\\n    </div>\\n    <div class=\\\"col-md-6\\\">\\n      <div class=\\\"col align-items-center justify-content-center\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"span4\\\">\\n            <img style=\\\"float:left\\\" src=\\\"assets/images/plane-2.jpg\\\" class=\\\"img-fluid\\\"/>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n\\n  <!-- confirmations -->\\n  <div [hidden]=\\\"hide_booking\\\" class=\\\"modal-body row\\\">\\n    <div class=\\\"col-md-6\\\">\\n      <a routerLink=\\\"flight-search\\\" class=\\\"btn btn-primary\\\">Home</a>\\n      <div class=\\\"card\\\">\\n        <div class=\\\"card-body\\\">\\n          <h5 class=\\\"card-title\\\">Outbound flight confirmation</h5>\\n          <p class=\\\"card-text\\\">{{outboundConfirmation}}</p>\\n        </div>\\n      </div>\\n      <div class=\\\"card\\\">\\n        <div class=\\\"card-body\\\">\\n          <h5 class=\\\"card-title\\\">Returning flight confirmation</h5>\\n          <p class=\\\"card-text\\\">{{inboundConfirmation}}</p>\\n        </div>\\n      </div>\\n      <div class=\\\"card\\\">\\n        <div class=\\\"card-body\\\">\\n          <h5 class=\\\"card-title\\\">Thank You</h5>\\n          <p class=\\\"card-text\\\">Thanks You for using the Flight Booking Demo Application.</p>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"col-md-6\\\">\\n      <div class=\\\"col align-items-center justify-content-center\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"span4\\\">\\n            <img style=\\\"float:left\\\" src=\\\"assets/images/plane-2.jpg\\\" class=\\\"img-fluid\\\"/>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute, ParamMap } from '@angular/router';\nimport { switchMap } from 'rxjs/operators';\n\nimport {FlightsService} from \"../services/flights.service\";\n\nimport {Flight} from \"../models/flight\";\nimport {Passenger} from \"../models/passenger\";\nimport {Address} from \"../models/address\";\nimport {SearchCriteria} from \"../models/searchCriteria\";\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/observable/forkJoin';\n\n@Component({\n  selector: 'app-flight-search',\n  templateUrl: './flight-search.component.html',\n  styleUrls: ['./flight-search.component.css']\n})\nexport class FlightSearchComponent implements OnInit {\n\n  displayedColumns = ['Airline', 'From', 'To', 'Depart', 'Return', 'Price'];\n\n  origins = ['AUS', 'IAH', 'ATL', 'MHI', 'KRT'];\n  destinations = ['AUS', 'IAH', 'ATL', 'MHI', 'KRT'];\n\n  hide_search_form = false;\n  hide_select_outbound = true;\n  hide_select_inbound = true;\n  hide_info_passenger = true;\n  hide_info_address = true;\n  hide_booking = true;\n\n  // TODO: to be deleted\n  //flight = new Flight(0, 0, '', '','',null,null,null, 0);\n  searchCriteria = new SearchCriteria(\"\", \"\", null, null);\n  passenger : Passenger = new Passenger(\"\", \"\", null);\n  address : Address = new Address(\"\", \"\", \"\", \"\", \"\", \"USA\");\n\n  outboundFlight: Flight;\n  inboundFlight: Flight;\n  outboundFlightsResult: Array<Flight> = [];\n  inboundFlightsResult: Array<Flight> = [];\n  outboundConfirmation: string;\n  inboundConfirmation: string;\n\n  constructor(\n    private flightService: FlightsService,\n    private route: ActivatedRoute,\n    private router: Router\n  ) { }\n\n  ngOnInit() {\n  }\n\n  searchFlights() {\n    this.hide_search_form = true;\n    this.hide_info_passenger = true;\n    this.hide_info_address = true;\n    this.hide_select_inbound = true;\n    this.hide_booking = true;\n    this.hide_select_outbound = false;\n\n    /**\n    this.flightService.searchFlights(this.searchCriteria.origin, this.searchCriteria.destination, this.searchCriteria.outDate)\n      .subscribe(data => {\n          this.outboundFlightsResult = data;\n        },\n        err => console.error(\"Outbound flight search error: \" + err.toLocaleString()),\n        () => {\n          console.log('Outbound flights search is done.');\n          console.log(this.outboundFlightsResult);\n        }\n      );\n\n    this.flightService.searchFlights(this.searchCriteria.destination, this.searchCriteria.origin, this.searchCriteria.inDate)\n      .subscribe(data => {\n          this.inboundFlightsResult = data;\n        },\n        err => console.error(\"Inbound flight search error: \" + err),\n        () => {\n          console.log('Inbound flights search is done.');\n          console.log(this.inboundFlightsResult);\n        }\n      );\n     */\n\n    this.flightService.searchAllFlights(this.searchCriteria.origin, this.searchCriteria.destination\n          , this.searchCriteria.outDate, this.searchCriteria.inDate)\n      .subscribe( data => {\n          this.outboundFlightsResult = data[0];\n          this.inboundFlightsResult = data[1];\n        },\n        err => console.error(\"All flights search error: \" + err.toLocaleString()),\n        () => {\n          console.log('All flights search is done.');\n          console.log(\"inbound flights: \" + this.inboundFlightsResult);\n          console.log(\"outbound flights: \" + this.outboundFlightsResult);\n        }\n      );\n\n  }\n\n  selectOutboundFligt(f: Flight) {\n    this.hide_search_form = true;\n    this.hide_select_outbound = true;\n    this.hide_info_passenger = true;\n    this.hide_info_address = true;\n    this.hide_booking = true;\n    this.hide_select_inbound = false;\n\n    console.log(\"selected outbound fight: \" + JSON.stringify(f));\n    this.outboundFlight = f;\n\n    // retrieve inbound flights\n    /**\n    this.flightService.searchFlights(this.searchCriteria.destination, this.searchCriteria.origin, this.searchCriteria.inDate)\n      .subscribe(data => {\n          this.inboundFlightsResult = data;\n        },\n        err => console.error(\"Inbound flight search error: \" + err.toLocaleString()),\n        () => {\n          console.log('Inbound flights search is done.');\n          console.log(this.inboundFlightsResult);\n        }\n      );\n     */\n  }\n\n  selectInboundFligt(f: Flight) {\n    this.hide_search_form = true;\n    this.hide_select_outbound = true;\n    this.hide_info_address = true;\n    this.hide_select_inbound = true;\n    this.hide_booking = true;\n    this.hide_info_passenger = false;\n\n    console.log(\"selected inbound fight: \" + JSON.stringify(f));\n    this.inboundFlight = f;\n  }\n\n  passengerInfo() {\n    this.hide_search_form = true;\n    this.hide_select_outbound = true;\n    this.hide_info_passenger = true;\n    this.hide_select_inbound = true;\n    this.hide_booking = true;\n    this.hide_info_address = false;\n\n    console.log(\"passenger selected: \" + JSON.stringify(this.passenger));\n  }\n\n  book() {\n    this.hide_search_form = true;\n    this.hide_select_outbound = true;\n    this.hide_info_passenger = true;\n    this.hide_select_inbound = true;\n    this.hide_info_address = true;\n    this.hide_booking = false;\n    console.log(\"address selected: \" + JSON.stringify(this.address));\n\n    /**\n    this.flightService.book(this.outboundFlight.id, this.passenger, this.address).subscribe(data => {\n      this.outboundConfirmation = data.confirmation;\n    });\n\n    this.flightService.book(this.inboundFlight.id, this.passenger, this.address).subscribe(data => {\n      this.inboundConfirmation = data.confirmation;\n    });\n     */\n\n    Observable.forkJoin(\n      this.flightService.book(this.outboundFlight.id, this.passenger, this.address),\n      this.flightService.book(this.inboundFlight.id, this.passenger, this.address)\n    ).subscribe(data => {\n        this.outboundConfirmation = data[0].confirmation;\n        this.inboundConfirmation = data[1].confirmation;\n      },\n      err => console.error(\"Error during obtaining booking confirmation: \" + err.toLocaleString()),\n      () => console.log(\"Finished obtaining booking confirmation successfully.\")\n    );\n  }\n\n}\n","export class Address{\n\n  constructor(\n    public address1: string,\n    public address2: string,\n    public city: string,\n    public zip: string,\n    public state: string,\n    public country: string) { }\n\n}\n","export class Passenger {\n\n  constructor (public firstName: string, public  lastName: string, public age: Number) { }\n\n}\n","import {Passenger} from \"./passenger\";\nimport {Address} from \"./address\";\n\nexport class ReservationRequest {\n\n  constructor(\n    public flightId: number,\n    public passengers: Passenger[],\n    public address: Address,\n    public confirmation: string\n  ) { }\n\n}\n","export class SearchCriteria {\n\n  constructor(\n    public origin: string,\n    public destination: string,\n    public outDate: Date,\n    public inDate: Date\n  ) { }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-page-notfound',\n  template: `\n    <p>\n      page-notfound works!\n    </p>\n  `,\n  styles: []\n})\nexport class PageNotfoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient, HttpParams} from \"@angular/common/http\";\nimport {Flight} from \"../models/flight\";\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/observable/forkJoin';\nimport {DatePipe} from \"@angular/common\";\nimport {Passenger} from \"../models/passenger\";\nimport {Address} from \"../models/address\";\nimport {ReservationRequest} from \"../models/reservationRequest\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FlightsService {\n\n  constructor(private http: HttpClient) { }\n\n  searchFlights(from: string, to: string, date: Date): Observable<Array<Flight>> {\n    var datePipe = new DatePipe('en-US');\n    let dt = datePipe.transform(date, 'yyyy-MM-dd');\n    console.log(\"searching: from: \" + from + \", to: \" + to + \", date: \" + dt);\n    //let url = \"/api/reservations/search/\"+from+\"/\"+to+\"/\"+dt;\n    let url = \"http://localhost:8080/api/reservations/search/\"+from+\"/\"+to+\"/\"+dt;\n    return this.http.get<Array<Flight>>(url);\n  }\n\n  searchAllFlights(from: string, to: string, outdate: Date, indate: Date): Observable<Array<Flight>[]>{\n    var datePipe = new DatePipe('en-US');\n    let outDt = datePipe.transform(outdate, 'yyyy-MM-dd');\n    let inDt = datePipe.transform(indate, 'yyyy-MM-dd');\n    console.log(\"searching all flights\");\n    //let url = \"/api/reservations/search/\"+from+\"/\"+to+\"/\"+dt;\n    let url1 = \"http://localhost:8080/api/reservations/search/\"+from+\"/\"+to+\"/\"+outDt;\n    let url2 = \"http://localhost:8080/api/reservations/search/\"+to+\"/\"+from+\"/\"+inDt;\n\n    return Observable.forkJoin(\n              this.http.get<Array<Flight>>(url2),\n              this.http.get<Array<Flight>>(url1)\n              );\n    //return this.http.get<Array<Flight>>(url);\n  }\n\n  book(flightId: number, passenger: Passenger, address: Address): Observable<ReservationRequest> {\n    //let url = \"/api/reservations/book\";\n    let url = \"http://localhost:8080/api/reservations/book\";\n    let passengers = new Array(passenger);\n    let reservationRequest = new ReservationRequest(flightId, passengers, address, null);\n    return this.http.post<ReservationRequest>(url, reservationRequest);\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}